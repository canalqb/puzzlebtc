from bit import Key
import numpy as np
import pandas as pd

# Lista fornecida (inicio, meio, fim) com alguns "meios" ausentes (None)
intervalos = [ 
    (2,3,3),
    (4,7,7),
    (8,8,15),
    (16,21,31),
    (32,49,63),
    (64,76,127),
    (128,224,255),
    (256,467,511),
    (512,514,1023),
    (1024,1155,2047),
    (2048,2683,4095),
    (4096,5216,8191),
    (8192,10544,16383),
    (16384,26867,32767),
    (32768,51510,65535),
    (65536,95823,131071),
    (131072,198669,262143),
    (262144,357535,524287),
    (524288,863317,1048575),
    (1048576,1811764,2097151),
    (2097152,3007503,4194303),
    (4194304,5598802,8388607),
    (8388608,14428676,16777215),
    (16777216,33185509,33554431),
    (33554432,54538862,67108863),
    (67108864,111949941,134217727),
    (134217728,227634408,268435455),
    (268435456,400708894,536870911),
    (536870912,1033162084,1073741823),
    (1073741824,2102388551,2147483647),
    (2147483648,3093472814,4294967295),
    (4294967296,7137437912,8589934591),
    (8589934592,14133072157,17179869183),
    (17179869184,20112871792,34359738367),
    (34359738368,42387769980,68719476735),
    (68719476736,100251560595,137438953471),
    (137438953472,146971536592,274877906943),
    (274877906944,323724968937,549755813887),
    (549755813888,1003651412950,1099511627775),
    (1099511627776,1458252205147,2199023255551),
    (2199023255552,2895374552463,4398046511103),
    (4398046511104,7409811047825,8796093022207),
    (8796093022208,15404761757071,17592186044415),
    (17592186044416,19996463086597,35184372088831),
    (35184372088832,51408670348612,70368744177663),
    (70368744177664,119666659114170,140737488355327),
    (140737488355328,191206974700443,281474976710655),
    (281474976710656,409118905032525,562949953421311),
    (562949953421312,611140496167764,1125899906842623),
    (1125899906842624,2058769515153876,2251799813685247),
    (2251799813685248,4216495639600700,4503599627370495),
    (4503599627370496,6763683971478124,9007199254740991),
    (9007199254740992,9974455244496708,18014398509481984),
    (18014398509481984,30045390491869460,36028797018963968),
    (36028797018963968,44218742292676576,72057594037927936),
    (72057594037927936,138245758910846496,144115188075855872),
    (144115188075855872,199976667976342048,288230376151711744),
    (288230376151711744,525070384258266176,576460752303423488),
    (576460752303423488,1135041350219496320,1152921504606846976),
    (1152921504606846976,1425787542618654976,2305843009213693952),
    (2305843009213693952,3908372542507822080,4611686018427387904),
    (4611686018427387904,8993229949524469760,9223372036854775808),
    (9223372036854775808,17799667357578235904,18446744073709551616),
    (18446744073709551616,30568377312064204800,36893488147419103232),
    (36893488147419103232,46346217550346338304,73786976294838206464),
    (73786976294838206464,132656943602386255872,147573952589676412928),
    (147573952589676412928,219898266213316034560,295147905179352825856),
    (295147905179352825856,297274491920375873536,590295810358705651712),
    (590295810358705651712,970436974005023670272,1180591620717411303424),
    (1180591620717411303424,None,2361183241434822606848),
    (2361183241434822606848,None,4722366482869645213696),
    (4722366482869645213696,None,9444732965739290427392),
    (9444732965739290427392,None,18889465931478580854784),
    (18889465931478580854784,22538323240989824647168,37778931862957161709568),
    (37778931862957161709568,None,75557863725914323419136),
    (75557863725914323419136,None,151115727451828646838272),
    (151115727451828646838272,None,302231454903657293676544),
    (302231454903657293676544,None,604462909807314587353088),
    (604462909807314587353088,1105520030589234431655936,1208925819614629174706176),
    (1208925819614629174706176,None,2417851639229258349412352),
    (2417851639229258349412352,None,4835703278458516698824704),
    (4835703278458516698824704,None,9671406556917033397649408),
    (9671406556917033397649408,None,19342813113834066795298816),
    (19342813113834066795298816,21090315766411507338838016,38685626227668133590597632),
    (38685626227668133590597632,None,77371252455336267181195264),
    (77371252455336267181195264,None,154742504910672534362390528),
    (154742504910672534362390528,None,309485009821345068724781056),
    (309485009821345068724781056,None,618970019642690137449562112),
    (618970019642690137449562112,868012190417726377904046080,1237940039285380274899124224),
    (1237940039285380274899124224,None,2475880078570760549798248448),
    (2475880078570760549798248448,None,4951760157141521099596496896),
    (4951760157141521099596496896,None,9903520314283042199192993792),
    (9903520314283042199192993792,None,19807040628566084398385987584),
    (19807040628566084398385987584,25525831956644114284329041920,39614081257132168796771975168),
    (39614081257132168796771975168,None,79228162514264337593543950336),
    (79228162514264337593543950336,None,158456325028528675187087900672),
    (158456325028528675187087900672,None,316912650057057350374175801344),
    (316912650057057350374175801344,None,633825300114114700748351602688),
    (633825300114114700748351602688,868221233689326482094685159424,1267650600228229401496703205376),
    (1267650600228229401496703205376,None,2535301200456458802993406410752),
    (2535301200456458802993406410752,None,5070602400912917605986812821504),
    (5070602400912917605986812821504,None,10141204801825835211973625643008),
    (10141204801825835211973625643008,None,20282409603651670423947251286016),
    (20282409603651670423947251286016,29083230144918043474352194715648,40564819207303340847894502572032),
    (40564819207303340847894502572032,None,81129638414606681695789005144064),
    (81129638414606681695789005144064,None,162259276829213363391578010288128),
    (162259276829213363391578010288128,None,324518553658426726783156020576256),
    (324518553658426726783156020576256,None,649037107316853453566312041152512),
    (649037107316853453566312041152512,1090246098153987122742007059972096,1298074214633706907132624082305024),
    (1298074214633706907132624082305024,None,2596148429267413814265248164610048),
    (2596148429267413814265248164610048,None,5192296858534827628530496329220096),
    (5192296858534827628530496329220096,None,10384593717069655257060992658440192),
    (10384593717069655257060992658440192,None,20769187434139310514121985316880384),
    (20769187434139310514121985316880384,31464123230573853396965426819235840,41538374868278621028243970633760768),
    (41538374868278621028243970633760768,None,83076749736557242056487941267521536),
    (83076749736557242056487941267521536,None,166153499473114484112975882535043072),
    (166153499473114484112975882535043072,None,332306998946228968225951765070086144),
    (332306998946228968225951765070086144,None,664613997892457936451903530140172288),
    (664613997892457936451903530140172288,919343500840980287176338231525376000,1329227995784915872903807060280344576),
    (1329227995784915872903807060280344576,None,2658455991569831745807614120560689152),
    (2658455991569831745807614120560689152,None,5316911983139663491615228241121378304),
    (5316911983139663491615228241121378304,None,10633823966279326983230456482242756608),
    (10633823966279326983230456482242756608,None,21267647932558653966460912964485513216),
    (21267647932558653966460912964485513216,37650549717742543066237230173355245568,42535295865117307932921825928971026432),
    (42535295865117307932921825928971026432,None,85070591730234615865843651857942052864),
    (85070591730234615865843651857942052864,None,170141183460469231731687303715884105728),
    (170141183460469231731687303715884105728,None,340282366920938463463374607431768211456),
    (340282366920938463463374607431768211456,None,680564733841876926926749214863536422912),
    (680564733841876926926749214863536422912,1103873984953507513725582045078716678144,1361129467683753853853498429727072845824),
    (1361129467683753853853498429727072845824,None,2722258935367507707706996859454145691648),
    (2722258935367507707706996859454145691648,None,5444517870735015415413993718908291383296),
    (5444517870735015415413993718908291383296,None,10889035741470030830827987437816582766592),
    (10889035741470030830827987437816582766592,None,21778071482940061661655974875633165533184),
    (21778071482940061661655974875633165533184,None,43556142965880123323311949751266331066368),
    (43556142965880123323311949751266331066368,None,87112285931760246646623899502532662132736),
    (87112285931760246646623899502532662132736,None,174224571863520493293247799005065324265472),
    (174224571863520493293247799005065324265472,None,348449143727040986586495598010130648530944),
    (348449143727040986586495598010130648530944,None,696898287454081973172991196020261297061888),
    (696898287454081973172991196020261297061888,None,1393796574908163946345982392040522594123776),
    (1393796574908163946345982392040522594123776,None,2787593149816327892691964784081045188247552),
    (2787593149816327892691964784081045188247552,None,5575186299632655785383929568162090376495104),
    (5575186299632655785383929568162090376495104,None,11150372599265311570767859136324180752990208),
    (11150372599265311570767859136324180752990208,None,22300745198530623141535718272648361505980416),
    (22300745198530623141535718272648361505980416,None,44601490397061246283071436545296723011960832),
    (44601490397061246283071436545296723011960832,None,89202980794122492566142873090593446023921664),
    (89202980794122492566142873090593446023921664,None,178405961588244985132285746181186892047843328),
    (178405961588244985132285746181186892047843328,None,356811923176489970264571492362373784095686656),
    (356811923176489970264571492362373784095686656,None,713623846352979940529142984724747568191373312),
    (713623846352979940529142984724747568191373312,None,1427247692705959881058285969449495136382746624),
    (1427247692705959881058285969449495136382746624,None,2854495385411919762116571938898990272765493248),
    (2854495385411919762116571938898990272765493248,None,5708990770823839524233143877797980545530986496),
    (5708990770823839524233143877797980545530986496,None,11417981541647679048466287755595961091061972992),
    (11417981541647679048466287755595961091061972992,None,22835963083295358096932575511191922182123945984),
    (22835963083295358096932575511191922182123945984,None,45671926166590716193865151022383844364247891968),
    (45671926166590716193865151022383844364247891968,None,91343852333181432387730302044767688728495783936),
    (91343852333181432387730302044767688728495783936,None,182687704666362864775460604089535377456991567872),
    (182687704666362864775460604089535377456991567872,None,365375409332725729550921208179070754913983135744),
    (365375409332725729550921208179070754913983135744,None,730750818665451459101842416358141509827966271488),
    (730750818665451459101842416358141509827966271488,None,1461501637330902918203684832716283019655932542976),

]

# Filtra apenas dados completos (sem None)
dados_validos = [
    (ini, meio, fim)
    for ini, meio, fim in intervalos
    if ini is not None and meio is not None and fim is not None
]

X = []
y = []
for ini, meio, fim in dados_validos:
    log2_ini = np.log2(float(ini))
    log2_fim = np.log2(float(fim))
    rel = (meio - ini) / (fim - ini)
    X.append([
        log2_ini,
        log2_fim,
        log2_ini**2,
        log2_fim**2,
        log2_ini * log2_fim,
        1
    ])
    y.append(rel)

X = np.array(X)
y = np.array(y)

coef, *_ = np.linalg.lstsq(X, y, rcond=None) 

def prever_meio(inicio, fim):
    log2_inicio = np.log2(float(inicio))
    log2_fim = np.log2(float(fim))
    x = np.array([
        log2_inicio,
        log2_fim,
        log2_inicio**2,
        log2_fim**2,
        log2_inicio * log2_fim,
        1
    ])
    meio_rel = x @ coef
    meio_rel = max(0.0, min(1.0, meio_rel))
    return meio_rel

print("Previsões de meios estimados com varredura relativa:\n")

ultimo_fim = 1180591620717411303424  # valor inicial

enderecos_alvo = [
    "16RGFo6hjq9ym6Pj7N5H7L1NR1rVPJyw2v",
    "1NBC8uXJy1GiJ6drkiZa1WuKn51ps7EPTv",
    "1MUJSJYtGPVGkBCTqGspnxyHahpt5Te8jy",
    "1QKBaU6WAeycb3DbKbLBkX7vJiaS8r42Xo",
    "1AoeP37TmHdFh8uN72fu9AqgtLrUwcv2wJ",
    "19GpszRNUej5yYqxXoLnbZWKew3KdVLkXg",
    "1PWo3JeB9jrGwfHDNpdGK54CRas7fsVzXU",
    "1JTK7s9YVYywfm5XUH7RNhHJH1LshCaRFR",
    "12VVRNPi4SJqUTsp6FmqDqY5sGosDtysn4",
    "1FWGcVDK3JGzCC3WtkYetULPszMaK2Jksv",
    "1DJh2eHFYQfACPmrvpyWc8MSTYKh7w9eRF",
    "1Bxk4CQdqL9p22JEtDfdXMsng1XacifUtE",
    "15qF6X51huDjqTmF9BJgxXdt1xcj46Jmhb",
    "1ARk8HWJMn8js8tQmGUJeQHjSE7KRkn2t8",
    "15qsCm78whspNQFydGJQk5rexzxTQopnHZ",
    "13zYrYhhJxp6Ui1VV7pqa5WDhNWM45ARAC",
    "14MdEb4eFcT3MVG5sPFG4jGLuHJSnt1Dk2",
    "1CMq3SvFcVEcpLMuuH8PUcNiqsK1oicG2D",
    "1K3x5L6G57Y494fDqBfrojD28UJv4s5JcK",
    "1PxH3K1Shdjb7gSEoTX7UPDZ6SH4qGPrvq",
    "16AbnZjZZipwHMkYKBSfswGWKDmXHjEpSf",
    "19QciEHbGVNY4hrhfKXmcBBCrJSBZ6TaVt",
    "1EzVHtmbN4fs4MiNk3ppEnKKhsmXYJ4s74",
    "1AE8NzzgKE7Yhz7BWtAcAAxiFMbPo82NB5",
    "17Q7tuG2JwFFU9rXVj3uZqRtioH3mx2Jad",
    "1K6xGMUbs6ZTXBnhw1pippqwK6wjBWtNpL",
    "15ANYzzCp5BFHcCnVFzXqyibpzgPLWaD8b",
    "18ywPwj39nGjqBrQJSzZVq2izR12MDpDr8",
    "1CaBVPrwUxbQYYswu32w7Mj4HR4maNoJSX",
    "1JWnE6p6UN7ZJBN7TtcbNDoRcjFtuDWoNL",
    "1CKCVdbDJasYmhswB6HKZHEAnNaDpK7W4n",
    "1PXv28YxmYMaB8zxrKeZBW8dt2HK7RkRPX",
    "1AcAmB6jmtU6AiEcXkmiNE9TNVPsj9DULf",
    "1EQJvpsmhazYCcKX5Au6AZmZKRnzarMVZu",
    "18KsfuHuzQaBTNLASyj15hy4LuqPUo1FNB",
    "15EJFC5ZTs9nhsdvSUeBXjLAuYq3SWaxTc",
    "1HB1iKUqeffnVsvQsbpC6dNi1XKbyNuqao",
    "1GvgAXVCbA8FBjXfWiAms4ytFeJcKsoyhL",
    "1824ZJQ7nKJ9QFTRBqn7z7dHV5EGpzUpH3",
    "18A7NA9FTsnJxWgkoFfPAFbQzuQxpRtCos",
    "1NeGn21dUDDeqFQ63xb2SpgUuXuBLA4WT4",
    "174SNxfqpdMGYy5YQcfLbSTK3MRNZEePoy",
    "1MnJ6hdhvK37VLmqcdEwqC3iFxyWH2PHUV",
    "1KNRfGWw7Q9Rmwsc6NT5zsdvEb9M2Wkj5Z",
    "1PJZPzvGX19a7twf5HyD2VvNiPdHLzm9F6",
    "1GuBBhf61rnvRe4K8zu8vdQB3kHzwFqSy7",
    "1GDSuiThEV64c166LUFC9uDcVdGjqkxKyh",
    "1Me3ASYt5JCTAK2XaC32RMeH34PdprrfDx",
    "1CdufMQL892A69KXgv6UNBD17ywWqYpKut",
    "1BkkGsX9ZM6iwL3zbqs7HWBV7SvosR6m8N",
    "1AWCLZAjKbV1P7AHvaPNCKiB7ZWVDMxFiz",
    "1G6EFyBRU86sThN3SSt3GrHu1sA7w7nzi4",
    "1MZ2L1gFrCtkkn6DnTT2e4PFUTHw9gNwaj",
    "1Hz3uv3nNZzBVMXLGadCucgjiCs5W9vaGz",
    "16zRPnT8znwq42q7XeMkZUhb1bKqgRogyy",
    "1KrU4dHE5WrW8rhWDsTRjR21r8t3dsrS3R",
    "17uDfp5r4n441xkgLFmhNoSW1KWp6xVLD",
    "13A3JrvXmvg5w9XGvyyR4JEJqiLz8ZySY3",
    "1UDHPdovvR985NrWSkdWQDEQ1xuRiTALq",
    "15nf31J46iLuK1ZkTnqHo7WgN5cARFK3RA",
    "1Ab4vzG6wEQBDNQM1B2bvUz4fqXXdFk2WT",
    "1Fz63c775VV9fNyj25d9Xfw3YHE6sKCxbt",
    "1CD91Vm97mLQvXhrnoMChhJx4TP9MaQkJo",
    "15MnK2jXPqTMURX4xC3h4mAZxyCcaWWEDD",
    "13N66gCzWWHEZBxhVxG18P8wyjEWF9Yoi1",
    "1NevxKDYuDcCh1ZMMi6ftmWwGrZKC6j7Ux",
    "1M7ipcdYHey2Y5RZM34MBbpugghmjaV89P",
    "18aNhurEAJsw6BAgtANpexk5ob1aGTwSeL",
    "1FwZXt6EpRT7Fkndzv6K4b4DFoT4trbMrV",
    "1CXvTzR6qv8wJ7eprzUKeWxyGcHwDYP1i2",
    "13Q84TNNvgcL3HJiqQPvyBb9m4hxjS3jkV",
    "1LuUHyrQr8PKSvbcY1v1PiuGuqFjWpDumN",
    "18192XpzzdDi2K11QVHR7td2HcPS6Qs5vg",
    "1NgVmsCCJaKLzGyKLFJfVequnFW9ZvnMLN",
    "1FTpAbQa4h8trvhQXjXnmNhqdiGBd1oraE",
    "14JHoRAdmJg3XR4RjMDh6Wed6ft6hzbQe9",
    "19z6waranEf8CcP8FqNgdwUe1QRxvUNKBG",
    "14u4nA5sugaswb6SZgn5av2vuChdMnD9E5",
    "19YZECXj3SxEZMoUeJ1yiPsw8xANe7M7QR"
]

for _ in range(5):
    proximo_inicio = ultimo_fim + 1
    proximo_fim = (proximo_inicio << 1) - 1
    intervalo = proximo_fim - proximo_inicio

    meio_rel = prever_meio(proximo_inicio, proximo_fim)

    # Detectar casas decimais
    rel_str = f"{meio_rel:.10f}".rstrip('0')
    casas_decimais = len(rel_str.split(".")[1]) if '.' in rel_str else 0
    passo = 1 / (10 ** casas_decimais)
    steps = int(1 / passo)

    for i in range(steps + 1):
        rel_atual = i * passo
        if rel_atual > 1.0:
            break
        meio = round(proximo_inicio + rel_atual * intervalo)
        meio_hex = hex(meio)[2:].zfill(64)

        key = Key.from_hex(meio_hex)
        wif = key.to_wif()
        addr = key.address

        print(f"[{proximo_inicio}-{proximo_fim}] rel={rel_atual:.{casas_decimais}f} → {meio} → {wif} → {addr}", end="\r")

        if addr in enderecos_alvo:
            print("\n🎯 ENDEREÇO ALVO ENCONTRADO!")
            print(f"🏁 Private Key HEX: {meio_hex}")
            print(f"🔑 WIF: {wif}")
            print(f"📬 Address: {addr}")
            exit(0)  # Encerra o script imediatamente

    ultimo_fim = proximo_fim
